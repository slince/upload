<?php

namespace Slince\Upload;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use Throwable;

final class File
{
    /**
     * @var string
     */
    protected string $name;

    /**
     * @var UploadedFile
     */
    protected UploadedFile $uploadedFile;

    /**
     * Is uploaded
     *
     * @var boolean
     */
    protected bool $uploaded = false;

    /**
     * @var Throwable|null
     */
    protected ?Throwable $exception = null;

    /**
     * Storage system returned.
     *
     * @var array
     */
    protected array $metadata;

    public function __construct(string $name, UploadedFile $uploadedFile)
    {
        $this->name = $name;
        $this->uploadedFile = $uploadedFile;
    }

    /**
     * Gets the key generated by `Namer`
     *
     * @return string
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * Access file details saved in client by this object.
     *
     * @return UploadedFile
     */
    public function getUploadedFile(): UploadedFile
    {
        return $this->uploadedFile;
    }

    /**
     * Set the upload result.
     *
     * @param bool $uploaded
     */
    public function setUploaded(bool $uploaded): void
    {
        $this->uploaded = $uploaded;
    }

    /**
     * Checks whether the file is uploaded successfully.
     *
     * @return bool
     */
    public function isUploaded(): bool
    {
        return $this->uploaded;
    }

    /**
     * The exception if the file is uploaded error.
     *
     * @return Throwable|null
     */
    public function getException(): ?Throwable
    {
        return $this->exception;
    }

    /**
     * @param Throwable $exception
     */
    public function setException(Throwable $exception): void
    {
        $this->exception = $exception;
    }
}
